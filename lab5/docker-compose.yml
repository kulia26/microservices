version: '3.7'
services:
  docker-mysql:
    hostname: docker-mysql
    image: mysql:5.7
    restart: always
    logging:
      driver: none
    environment:
      MYSQL_DATABASE: 'user_app'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: '12345'
      MYSQL_ROOT_PASSWORD: '12345'
    ports:
      - '3306:3306'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    network_mode: host
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
      - "9080:9080"
 
  grafana:
    image: grafana/grafana
    network_mode: host
    ports:
      - "3000:3000"
      
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    # network_mode: host

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    # network_mode: host
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "create.entity:3:1,update.entity:3:1" # docker-compose stop topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - "zookeeper"

  server:
    hostname: server
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - rabbit

  configserver:
    hostname: configserver
    environment:
      EUREKA_SERVER: http://server:8761/eureka
    build:
      context: configserver
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - server
      - rabbit

  rabbit:
    hostname: rabbit
    image: "rabbitmq:3"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"

  gateway:
    hostname: gateway
    environment:
      EUREKA_SERVER: http://server:8761/eureka
    build:
      context: gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - configserver

  client:
    hostname: client
    environment:
      EUREKA_SERVER: http://server:8761/eureka
      MYSQL: docker-mysql:3306
    build:
      context: client
      dockerfile: Dockerfile
    ports:
     - "8081-8082:8081"
    depends_on:
     - configserver
     - docker-mysql
     - rabbit
     - kafka

  consumer:
    hostname: consumer
    build:
      context: consumer
      dockerfile: Dockerfile
    depends_on:
     - kafka